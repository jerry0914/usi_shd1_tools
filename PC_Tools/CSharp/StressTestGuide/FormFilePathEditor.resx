<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnFilePath.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACwwAAAsMAT9AIsgAAAS9SURBVDhPfZR7TJNXGMaPM24y
        FZBe5CLgEBwXjYgSGOBAQFi8DCjRaSAmMwy3bM4pbMTbog4t5TpFrVZEp4gCUwpMN6LRLMumkCG0XEqB
        ltIC8k25Kgwx5dlbCmp08Y8n7/nyfed3nvdyPqZIt2bKbCFrPObElOk8pszgm0VrXbYt21UUyFaXR7Jo
        eQRbfy2MH/2z3w1RsTciznsOe2a6bHI94sjm77eZI0yZ4yFMmf3OG4FtBDx9KYCJysJYlDx0Zqw86Kdt
        t4Igbo3DoebNCMv3GHQ8INy84CD/sP0eSwi+m+XxRqAyx5b1nPFnn137gMWW+r4fXxGAjfLAe3G/BGlT
        1ZuRXL0WQVLXZ8Eyt6ce4nngJb/rPgkUENDxNWA9AVvz/Nn1gmByudItpjTgfEhRoOXKPM/FouJlPd/X
        b0DizWBsqfDHYok9bJIsJoCVtFHVJF3UXJ9tp6rPcTAr217VkOtsUOcHHDScDZlx5ZQr23l5xQxFhoB9
        IVvEfE65VSTeWoU9tTHYeiMAnml2ZmDTCRdOd3UV8K8E412fYrw78bkw8DX0pcvbG44u8VOkWrrUpM52
        7ThoYb/t2PyTIUVLkfhHBETlflhT4g2Hw/PwdhKl3JRry+kuOQEqIXCXAVUv6W+Gvhu8QUNl/JCubA06
        5JHgSiOQXxmDpJsibL/ij/gMl65Nme55UXtnHYreb2U1CVwAqO2AahNk2guZoKr5ABcFPIoF+kRAfwxF
        eu7dgKdt26HPWdj8QOabqJdY7jBkCVxeAFumgKSaSd03x7HfGQbKGbovMrSfYtBKGdqOvwVNgTc0F5eg
        o2Q5mo47QiGxCTUDC52BVlsY/2Lor5iOrkILaGRWaD7BQ4uUT3EebV6GjvKP0H07Dr01n2O49VuMtu8k
        57vRXyVCfZbABPQgoB0B3wO0ttCdnYnGk+7QlUai+84W9Nal4IkuG88GTsM4eBLjA5mU6j5AHw20hwK6
        UBi166Ar8kXtYcsdpnFjquMOXEexO4yNbmg/54DRvnwAcmBUBoycBh4fo5odoDp+CRg+oYNXA23BZunC
        MHR3JZTpQp0inec1AWyWOnKdcm/03vGBvmw9jCNFNELngKEcasAh4OEu4EECwTaSq7WAhkas7UOKwTC2
        hKC90Ad1R6wOTF0IAjoR0AfczUA8qkkGxkuBJyeAQQmlt5ecfQV0bgE6qLsvu9OuwmBVONWNV0Mg/nNg
        Q46QU8uc0PVrKEa6coGxAnKXNemODjC505vcrSGQyZ0ZOE7rtgsepkZkTsEmgHViS672BwsYrtNsPb0K
        DEvphhwhd7vNdeuMJ3f0Ths+kSZ0BDWEYvBeOJQZAvXLsAmgMoPH0QK992kEUGJ2Z2rCP98QcCs5JHdd
        6wiyGs+awzFc7Y/Hfy5Ha54zFOn8Pa8BG4469rTkL8UoR3UbO0v1S6PO0mj0JdNNSMBQdSQeVi5DT4UX
        NBe8QD+Ngfup1rfq0mzSCDD9NWBjrjOnuRxI6RZjjMvEQG0Cun8Lg7ZwKdR5i0fowNu1Yt4+gkTVia0/
        Vkps/Gjj3FdBU2L1mUJ9Q4491Gc8jSqpa03Djw4pCgl/BQ2qu0JstVAhmWtNH057deP/i8/+A/B8tHqK
        bgM1AAAAAElFTkSuQmCC
</value>
  </data>
</root>